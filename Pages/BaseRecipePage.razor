@page "/baserecipe"
@using System.Linq.Expressions;
@using BakingStore.Components.BaseRecipe
@inject IBaseRecipeRepository repository;
@inject IUOMRepository uomRepository;
@inject ToastService toastService;

<Crud 
	T="BaseRecipe" 
	@ref="baseCrud" 
	Repository="repository" 
	Request="pageRequest"
>
    <PageTitle>
		<h3 class="text-h2">BaseRecipe List</h3>
    </PageTitle>
    <Form Context="input">
		<div class="flex flex-col w-full">
			<label>Recipe Name</label>
			<input @bind="input.Name" />
		</div>
		<div class="flex flex-col w-full">
			<label>Expected Product Result Quantity</label>
			<input @bind="input.ProductResultQty" type="number" />
		</div>
    </Form>

    <ListView Context="items">
		<table class="table-auto table-primary">
			<thead>
				<tr>
					<th>Recipe Name</th>
					<th>Expected Qty</th>
					<th>Action</th>
				</tr>
			</thead>
			<tbody>
				@foreach (BaseRecipe item in items)
				{
					<tr>
						<td>@item.Name</td>
						<td>@item.ProductResultQty</td>
						<td class="flex gap-x-1">
							<button class="btn-primary" @onclick="() => ToggleDetail(item)">View</button>
							<EditButton @onclick="() => baseCrud.OnEditAsync(item)" />
							<DeleteButton @onclick="() => baseCrud.OnDeleteAsync(item)" />
						</td>
					</tr>
					<BaseRecipeDetail BaseRecipe="item" Show="item.ShowDetail" />
				}
			</tbody>
		</table>
    </ListView>
</Crud>

@code {
	private PageRequest<BaseRecipe> pageRequest = new();
	private Crud<BaseRecipe> baseCrud;
	private void ToggleDetail(BaseRecipe e)
	{
		e.ShowDetail = !e.ShowDetail;
	}
}
